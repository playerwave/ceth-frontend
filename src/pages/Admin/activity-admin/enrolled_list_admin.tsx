import { User } from "lucide-react";
import { useState } from "react";
import { Checkbox, FormControlLabel } from "@mui/material";
import BackBotton from "../../../components/botton/back_botton";

export default function enrolled_list_admin() {
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
  type Student = {
    id: string;
    name: string;
    department: string;
    status: string;
    checkIn: string;
    checkOut: string;
    evaluated: string;
  };
  
  const studentData: Student[] = [
    {
      id: "65160001",
      name: "‡∏™‡∏£‡∏ß‡∏¥‡∏® ‡πÄ‡∏Å‡∏ï‡∏∏‡∏°‡∏≤‡∏ï‡∏¢‡πå",
      department: "CS",
      status: "normal",
      checkIn: "Yes",
      checkOut: "Yes",
      evaluated: "Yes",
    },
    {
      id: "65160002",
      name: "‡∏ç‡∏≤‡∏ì‡∏≤‡∏Å‡∏£ ‡∏ö‡∏£‡∏£‡∏ú‡∏ô‡∏∂‡∏Å",
      department: "SE",
      status: "risk",
      checkIn: "No",
      checkOut: "No",
      evaluated: "No",
    },
    {
      id: "65160003",
      name: "‡∏ç‡∏≤‡∏ì‡∏≤‡∏Å‡∏£ ‡∏ö‡∏£‡∏£‡∏ú‡∏ô‡∏∂‡∏Å",
      department: "CS",
      status: "normal",
      checkIn: "Yes",
      checkOut: "Yes",
      evaluated: "Yes",
    },
    {
      id: "65160004",
      name: "‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£ ‡πÄ‡∏Å‡∏©‡∏ì‡∏µ‡∏¢‡πå",
      department: "IT",
      status: "normal",
      checkIn: "Yes",
      checkOut: "No",
      evaluated: "No",
    },
    {
      id: "65160005",
      name: "‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£ ‡πÄ‡∏Å‡∏©‡∏ì‡∏µ‡∏¢‡πå",
      department: "AI",
      status: "risk",
      checkIn: "No",
      checkOut: "No",
      evaluated: "No",
    },
    {
      id: "65160006",
      name: "‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£ ‡πÄ‡∏Å‡∏©‡∏ì‡∏µ‡∏¢‡πå",
      department: "IT",
      status: "risk",
      checkIn: "Yes",
      checkOut: "Yes",
      evaluated: "No",
    },
    {
      id: "65160007",
      name: "‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£ ‡πÄ‡∏Å‡∏©‡∏ì‡∏µ‡∏¢‡πå",
      department: "CS",
      status: "normal",
      checkIn: "Yes",
      checkOut: "Yes",
      evaluated: "No",
    },
    {
      id: "65160008",
      name: "‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£ ‡πÄ‡∏Å‡∏©‡∏ì‡∏µ‡∏¢‡πå",
      department: "SE",
      status: "risk",
      checkIn: "No",
      checkOut: "No",
      evaluated: "No",
    },
    {
      id: "65160009",
      name: "‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£ ‡πÄ‡∏Å‡∏©‡∏ì‡∏µ‡∏¢‡πå",
      department: "AI",
      status: "risk",
      checkIn: "Yes",
      checkOut: "No",
      evaluated: "No",
    },

  ];
  

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå
  const [selectedDepartments, setSelectedDepartments] = useState<string[]>([]);
  const [selectedStatus, setSelectedStatus] = useState<string[]>([]);
  const [selectedTab, setSelectedTab] = useState("list");
  
  const filteredStudents = studentData.filter((student) => {
    return (
      (selectedDepartments.length === 0 || selectedDepartments.includes(student.department)) &&
      (selectedStatus.length === 0 || selectedStatus.includes(student.status)) &&
      (selectedTab !== "partial" || student.checkOut === "No") && // üîπ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏ß‡∏•‡∏≤" ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ checkOut === "No"
      (selectedTab !== "no-eval" || student.evaluated === "No") // üîπ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô" ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ evaluated === "No"
    );
  });

  return (
    <div className="p-6 w-full max-w-[1110px] mx-auto">
    {/* Header */}
    <h1 className="text-3xl font-bold mb-4">‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</h1>

    {/* üîπ ‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
    <div className="flex gap-6 text-lg pb-2">
      {[
        { key: "list", label: "‡∏•‡∏¥‡∏™‡∏ï‡πå" },
        { key: "partial", label: "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏ß‡∏•‡∏≤" },
        { key: "no-eval", label: "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô" },
      ].map((tab) => (
        <button
          key={tab.key}
          onClick={() => setSelectedTab(tab.key)}
          className={`relative pb-2 transition-all ${
            selectedTab === tab.key
              ? "text-blue-900 font-bold after:absolute after:left-0 after:bottom-0 after:w-full after:h-[4px] after:bg-blue-900 after:rounded-full"
              : "text-gray-600"
          }`}
        >
          {tab.label}
        </button>
      ))}
    </div>

    {/* ‡∏Å‡∏£‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
    <div className="p-0 w-full h-[510px] border border-gray-300 shadow-md rounded-lg flex flex-col">

      {/* üîπ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° & ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå */}
      <div className="flex justify-between items-center p-4">
        <div className="flex items-center gap-2 text-lg font-semibold">
          50/50 <User size={24} />
        </div>

        {/* ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
        <div className="flex gap-4">
          {/* ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≤‡∏Ç‡∏≤ */}
          <div className="flex items-center gap-2">
            <button className="bg-blue-900 text-white px-4 py-1 rounded">‡∏™‡∏≤‡∏Ç‡∏≤</button>
            {["SE", "AI", "CS", "IT"].map((dept) => (
              <FormControlLabel
                key={dept}
                control={
                  <Checkbox
                    checked={selectedDepartments.includes(dept)}
                    onChange={() =>
                      setSelectedDepartments((prev) =>
                        prev.includes(dept) ? prev.filter((d) => d !== dept) : [...prev, dept]
                      )
                    }
                    sx={{
                      color: "#757575", 
                      "&.Mui-checked": { color: "#2196F3" }, 
                    }}
                  />
                }
                label={dept}
              />
            ))}
          </div>

          {/* ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
          <div className="flex items-center gap-2">
            <button className="bg-blue-900 text-white px-4 py-1 rounded">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</button>
            {["normal", "risk"].map((status) => (
              <FormControlLabel
                key={status}
                control={
                  <Checkbox
                    checked={selectedStatus.includes(status)}
                    onChange={() =>
                      setSelectedStatus((prev) =>
                        prev.includes(status) ? prev.filter((s) => s !== status) : [...prev, status]
                      )
                    }
                    sx={{
                      color: "#757575", 
                      "&.Mui-checked": { color: "#2196F3" }, 
                    }}
                  />
                }
                label={status === "normal" ? "‡∏õ‡∏Å‡∏ï‡∏¥" : "‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á"}
              />
            ))}
          </div>
        </div>
      </div>

      {/* Data Table */}
      <div className="overflow-x-auto max-h-[400px] rounded-lg ">
      <table className="w-full border-spacing-0 table-auto">
        {/* üîπ ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏°‡∏ô‡∏ó‡∏±‡πâ‡∏á 4 ‡∏°‡∏∏‡∏°) */}
        <thead className="bg-blue-900 text-white sticky top-0 z-10 rounded-lg">
          <tr>
            <th className="p-3 text-left w-[120px] rounded-tl-lg rounded-bl-lg">‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï</th>
            <th className="p-3 text-left w-[200px]">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
            <th className="p-3 text-left w-[120px]">‡∏™‡∏≤‡∏Ç‡∏≤</th>
            <th className="p-3 text-center w-[120px]">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
            <th className="p-3 text-center w-[120px]">‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤</th>
            <th className="p-3 text-center w-[120px]">‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å</th>
            <th className="p-3 text-center w-[120px] rounded-tr-lg rounded-br-lg">‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô</th>
          </tr>
        </thead>

        {/* üîπ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ) */}
        <tbody className="bg-white">
            {filteredStudents
              .filter((student) => {
                if (selectedTab === "partial") return student.checkOut === "No";
                if (selectedTab === "no-eval") return student.evaluated === "No";
                return true;
              })
              .map((student, index) => (
                <tr key={index} className="border-b border-gray-300 hover:bg-gray-100">
                  <td className="p-3 text-left">{student.id}</td>
                  <td className="p-3 text-left">{student.name}</td>
                  <td className="p-3 text-left">{student.department}</td>
                  <td className="p-3 text-center"> 
                    <span
                      className={`w-[110px] h-[30px] flex items-center justify-center rounded-md text-sm font-semibold border ${
                        student.status === "normal"
                          ? "text-green-700 bg-green-100 border-green-400"
                          : "text-red-700 bg-red-100 border-red-400"
                      }`}
                    >
                      {student.status}
                    </span>
                  </td>
                  <td className="p-3 text-center">{student.checkIn}</td> 
                  <td className="p-3 text-center">{student.checkOut}</td> 
                  <td className="p-3 text-center">{student.evaluated}</td> 
                </tr>
              ))}
          </tbody>
      </table>
    </div>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö */}
      <div className="mt-auto flex justify-left p-4">
        <BackBotton />
      </div>
    </div>
  </div>
  );
}