// import { Navigate } from "react-router-dom";
// import { useAuthStore } from "../../stores/Visitor/auth.store";

// export default function ProtectedRoute({ children }: { children: JSX.Element }) {
//   const { isAuthenticated, authLoading } = useAuthStore();

//   if (authLoading) {
//     return <div>Loading...</div>; // ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡∏ó‡∏≥ spinner ‡∏Å‡πá‡πÑ‡∏î‡πâ
//   }

//   if (!isAuthenticated) {
//     return <Navigate to="/login" replace />;
//   }

//   return children;
// }

//version 2
// import { useEffect } from "react";
// import { Navigate } from "react-router-dom";
// import { useAuthStore } from "../../stores/Visitor/auth.store";

// export default function ProtectedRoute({ children }: { children: JSX.Element }) {
//   const { isAuthenticated, authLoading, fetchMe } = useAuthStore();

//   useEffect(() => {
//     fetchMe(); // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤ route
//   }, []);

//   if (authLoading) return null; // ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏î‡∏á loader

//   if (!isAuthenticated) return <Navigate to="/login" replace />;

//   return children;
// }

import { useEffect } from "react";
import { Navigate, useLocation } from "react-router-dom";
import { useAuthStore } from "../../stores/Visitor/auth.store";

export default function ProtectedRoute({ children }: { children: JSX.Element }) {
  const { isAuthenticated, authLoading, user, fetchMe } = useAuthStore();
  const location = useLocation();

  // useEffect(() => {
  //   fetchMe(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤ route
  // }, []);

  useEffect(() => {
  fetchMe(); // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô mount
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡∏ä‡πà‡∏ß‡∏¢ debug ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
  console.log("üîÅ Fetching user from /me");
}, []);


  if (authLoading) return null; // ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏î‡∏á loader

  if (!isAuthenticated || !user) {
    
    return <Navigate to="/activity-list-visitor" replace />;
  }

  // ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° path ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ role ‡∏≠‡∏∞‡πÑ‡∏£
  const path = location.pathname;

  // üë®‚Äçüéì ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ path ‡∏ó‡∏µ‡πà‡∏°‡∏µ "student"
  if (path.includes("student") && user.role !== "Student") {
    return <Navigate to="/login" replace />;
  }

  // üë©‚Äçüè´ ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå/‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ path ‡∏ó‡∏µ‡πà‡∏°‡∏µ "admin" ‡∏´‡∏£‡∏∑‡∏≠ "/" ‡πÅ‡∏£‡∏Å
  if (
    (path.includes("admin") || path === "/") &&
    user.role !== "Teacher" &&
    user.role !== "Admin" 
  ) {
    if (!user.role) {
  console.warn("‚ùå Missing user.role. Redirecting to login.");
  return <Navigate to="/login" replace />;
}
  }

  // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤
  return children;
}
