import React from 'react';
import { useSecureParams, extractSecureParam, hasSecureParam } from '../routes/secure/SecureRoute';
import { EncryptedLink } from '../components/SecureLink';

// üìã Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
interface ActivityData {
  id: number;
  name: string;
  type: string;
  isActive: boolean;
}

// üîß ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ secure params ‡πÅ‡∏ö‡∏ö type-safe
export const ActivityInfoComponent: React.FC = () => {
  const params = useSecureParams();
  
  // ‡πÉ‡∏ä‡πâ utility functions ‡πÅ‡∏ö‡∏ö type-safe
  const activityId = extractSecureParam(params, 'id', 0);
  const activityName = extractSecureParam(params, 'name', '');
  const activityType = extractSecureParam(params, 'type', '');
  const isActive = extractSecureParam(params, 'isActive', false);
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ parameter ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const hasUserId = hasSecureParam(params, 'userId');
  const userId = hasUserId ? extractSecureParam(params, 'userId', 0) : null;

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h1>
      
      <div className="space-y-2">
        <p><strong>ID:</strong> {activityId}</p>
        <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {activityName}</p>
        <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> {activityType}</p>
        <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> {isActive ? '‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}</p>
        {hasUserId && <p><strong>User ID:</strong> {userId}</p>}
      </div>
    </div>
  );
};

// üîß ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö secureParams ‡πÄ‡∏õ‡πá‡∏ô prop
interface ActivityDetailProps {
  secureParams: {
    [key: string]: string | number | boolean | null | undefined;
  };
}

export const ActivityDetailComponent: React.FC<ActivityDetailProps> = ({ secureParams }) => {
  // ‡πÉ‡∏ä‡πâ utility functions ‡πÅ‡∏ö‡∏ö type-safe
  const activityId = extractSecureParam(secureParams, 'id', 0);
  const activityName = extractSecureParam(secureParams, 'name', '');
  
  return (
    <div className="border rounded-lg p-4">
      <h2 className="text-xl font-semibold">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h2>
      <p>ID: {activityId}</p>
      <p>‡∏ä‡∏∑‡πà‡∏≠: {activityName}</p>
    </div>
  );
};

// üîß ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏≠‡∏∑‡πà‡∏ô
export const ActivityListComponent: React.FC = () => {
  const activities: ActivityData[] = [
    { id: 1, name: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏´‡∏Å‡∏¥‡∏à‡∏®‡∏∂‡∏Å‡∏©‡∏≤", type: "internship", isActive: true },
    { id: 2, name: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô", type: "training", isActive: false },
    { id: 3, name: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ß‡∏¥‡∏à‡∏±‡∏¢", type: "research", isActive: true }
  ];

  return (
    <div className="space-y-4">
      <h1 className="text-2xl font-bold">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h1>
      
      {activities.map((activity) => (
        <div key={activity.id} className="border rounded-lg p-4">
          <h3 className="font-semibold">{activity.name}</h3>
          <p className="text-gray-600">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: {activity.type}</p>
          <p className="text-gray-600">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {activity.isActive ? '‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}</p>
          
          {/* ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ö‡∏ö type-safe */}
          <EncryptedLink 
            to="/activity-info-admin" 
            params={{
              id: activity.id,
              name: activity.name,
              type: activity.type,
              isActive: activity.isActive,
              timestamp: Date.now()
            }}
            className="text-blue-600 hover:text-blue-800 underline mt-2 inline-block"
          >
            ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
          </EncryptedLink>
        </div>
      ))}
    </div>
  );
};

// üîß ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö form
export const ActivityFormComponent: React.FC = () => {
  const params = useSecureParams();
  
  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å URL parameters ‡πÅ‡∏ö‡∏ö type-safe
  const editMode = hasSecureParam(params, 'id');
  const activityId = editMode ? extractSecureParam(params, 'id', 0) : 0;
  const activityName = editMode ? extractSecureParam(params, 'name', '') : '';
  
  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">
        {editMode ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°' : '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà'}
      </h1>
      
      <form className="space-y-4">
        <div>
          <label className="block text-sm font-medium mb-1">‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</label>
          <input 
            type="text" 
            defaultValue={activityName}
            className="w-full p-2 border rounded"
          />
        </div>
        
        <div>
          <label className="block text-sm font-medium mb-1">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</label>
          <select className="w-full p-2 border rounded">
            <option value="internship">‡∏™‡∏´‡∏Å‡∏¥‡∏à‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option>
            <option value="training">‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô</option>
            <option value="research">‡∏ß‡∏¥‡∏à‡∏±‡∏¢</option>
          </select>
        </div>
        
        <button 
          type="submit"
          className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
        >
          {editMode ? '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï' : '‡∏™‡∏£‡πâ‡∏≤‡∏á'}
        </button>
      </form>
    </div>
  );
}; 