import { create } from "zustand";
import { ActivityState } from "../../types/Admin/activity_list_type";
import { Activity } from "../../types/Student/activity_list_studen_type";

// üîÅ import service ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
import {
  fetchActivities as fetchActivitiesService,
  fetchActivity as fetchActivityService,
  searchActivities as searchActivitiesService,
} from "../../service/Admin/activity_list_service"; // ‚úÖ << ‡∏õ‡∏£‡∏±‡∏ö path ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á

export const useActivityStore = create<ActivityState>((set, get) => ({
  activities: [],
  searchResults: null,
  activityError: null,
  activityLoading: false,
  activity: null,
  enrolledActivities: [],

  fetchActivities: async () => {
    set({ activityLoading: true, activityError: null });
    try {
      const activities = await fetchActivitiesService("yourUserId"); // ‚úÖ ‡πÉ‡∏™‡πà userId ‡∏ñ‡πâ‡∏≤ service ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
      set({ activities, activityLoading: false });
    } catch (error) {
      console.error("‚ùå Error fetching activities:", error);
      set({
        activityError: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏î‡πâ",
        activityLoading: false,
      });
    }
  },

  searchActivities: async (searchName: string) => {
    if (!searchName.trim()) {
      await get().fetchActivities();
      set({ searchResults: null });
      return;
    }

    set({ activityLoading: true, activityError: null });
    try {
      const results = await searchActivitiesService(searchName);
      set({ searchResults: results, activityLoading: false });
    } catch (error) {
      console.error("‚ùå Error searching activities:", error);
      set({
        activityError: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏î‡πâ",
        activityLoading: false,
      });
    }
  },

  fetchActivity: async (id: number | string): Promise<Activity | null> => {
    set({ activityLoading: true, activityError: null });
    try {
      const activity = await fetchActivityService(id, "yourUserId");
      set({ activity, activityLoading: false });
      return activity;
    } catch (error) {
      console.error("‚ùå Error fetching activity:", error);
      set({
        activityError: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ",
        activityLoading: false,
      });
      return null;
    }
  },
}));
